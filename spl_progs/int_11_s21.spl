alias userSP R5;
userSP = SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;

alias syscall R6;
syscall = [[PTBR + 2 * (userSP - 5) / 512] * 512 + (userSP - 5) % 512];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = syscall;

if (syscall == 11) then
	// Getpid
	[[PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512] = [SYSTEM_STATUS_TABLE + 1];
else if (syscall == 12) then
	// Getppid
	[[PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512] = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 2];
else if (syscall == 13) then
	// Wait
	alias pid R7;
	pid = [[PTBR + 2 * (userSP - 4) / 512] * 512 + (userSP - 4) % 512];
	
	if (pid == [SYSTEM_STATUS_TABLE + 1] || [PROCESS_TABLE + pid * 16 + 4] == TERMINATED || pid > 15 || pid < 0) then
		[[PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512] = -1;
		SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
		[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
		ireturn;
	endif;

	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 4] = WAIT_PROCESS;
	[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 5] = pid;

	multipush(R5,R6,R7);
	call MOD_5;
	multipop(R5,R6,R7);

	[[PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512] = 0;
else if (syscall == 14) then
    	// Signal
	alias i R6;
	i = 0;
	while (i < 16) do
		if ([PROCESS_TABLE + i * 16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + i * 16 + 4] == [SYSTEM_STATUS_TABLE + 1]) then
			[PROCESS_TABLE + i * 16 + 4] = READY;
			[PROCESS_TABLE + i * 16 + 5] = -1;
		endif;
		i = i + 1;
	endwhile;

	[[PTBR + 2 * (userSP - 1) / 512] * 512 + (userSP - 1) % 512] = 0;
endif;
endif;
endif;
endif;

SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;
