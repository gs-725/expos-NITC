alias usersp R0;
alias fname R1;
usersp=SP;
alias pid R2;
pid=[SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 9;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11]*512-1;
fname=[[PTBR+2*((usersp-4)/512)]*512+(usersp-4)%512];
alias i R3;
i=0;//inodeindex
while(i<MAX_FILE_NUM)do
	if((fname==[INODE_TABLE+i*16+1])&&([INODE_TABLE+i*16]==3))then
		break;
	else
		i=i+1;
	endif;
endwhile;
if(i>=MAX_FILE_NUM)then
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP=usersp;
[[PTBR+2*((usersp-1)/512)]*512+(usersp-1)%512]=-1;
ireturn;
else
	
	multipush(R0,R1,R2,R3);
	R1=3;
	R2=pid;
	call MOD_1;
	multipop(R0,R1,R2,R3);
        [MEMORY_FREE_LIST+[PROCESS_TABLE+pid*16+11]]=[MEMORY_FREE_LIST+[PROCESS_TABLE+pid*16+11]]+1;
        [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
        SP=[PROCESS_TABLE+pid*16+11]*512-1;
        [PROCESS_TABLE+pid*16+7]=i;
        [PROCESS_TABLE+pid*16+4]=RUNNING;
       	//PTBR=[PROCESS_TABLE+pid*16+14];
       	//Library
	[PTBR+0] = 63;
	[PTBR+1] = "0100";
	[PTBR+2] = 64;
	[PTBR+3] = "0100";
	
	//HEAP
	multipush(R0,R1,R2,R3);
	R1=1;
	call MOD_2;
	[PTBR+4] = R0;
	[PTBR+5] = "0110";
	multipop(R0,R1,R2,R3);
	multipush(R0,R1,R2,R3);
	R1=1;
	call MOD_2;
	[PTBR+6] = R0;
	[PTBR+7] = "0110";
	multipop(R0,R1,R2,R3);
	
	//code
	alias j R4;
	j=0;
	while(j<4)do
		if([INODE_TABLE + i * 16 + 8 + j] != -1) then
			multipush(R0,R1,R2,R3,R4);
			R1 = 1;
			call MOD_2;
			[PTBR + 8 + 2 * j] = R0;
			[PTBR + 9 + 2 * j] = "0100";
			loadi(R0, [INODE_TABLE + i * 16 + 8 + j]);
			multipop(R0,R1,R2,R3,R4);
		else
			[PTBR + 8 + 2 * j] = -1;
			[PTBR + 9 + 2 * j] = "0000";
		endif;
		j = j + 1;
	endwhile;
	//stack
	multipush(R0,R1,R2,R3,R4);
	R1=1;
	call MOD_2;
	[PTBR+16] = R0;
	[PTBR+17] = "0110";
	multipop(R0,R1,R2,R3,R4);
	multipush(R0,R1,R2,R3,R4);
	R1=1;
	call MOD_2;
	[PTBR+18] = R0;
	[PTBR+19] = "0110";
	multipop(R0,R1,R2,R3,R4);
	
	[[PTBR+16]*512]=[[PTBR+8]*512+1];
	SP=8*512;
	[PROCESS_TABLE+pid*16+9]=0;
	ireturn;
endif;
	
