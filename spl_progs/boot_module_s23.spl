//int 7 write
loadi(16,29);
loadi(17,30);
//scheduler
loadi(50,63);
loadi(51,64);
//timer interrupt
loadi(4, 17);
loadi(5, 18);
//init
loadi(65,7);
loadi(66,8);
//int 10 exit
loadi(22,35);
loadi(23,36);
//exce	ption handler
loadi(2, 15);
loadi(3, 16);
//library
loadi(63,13);
loadi(64,14);
//device manager
loadi(40,53);
loadi(41,54);
//resource manager
loadi(48,61);
loadi(49,62);
//int 6 read
loadi(14,27);
loadi(15,28);
//console interrupt
loadi(8,21);
loadi(9,22);
//int 9 exec
loadi(20,33);
loadi(21,34);
//mod 1 process manager
loadi(42,55);
loadi(43,56);
//mod 2 memory manager
loadi(44,57);
loadi(45,58);
//inode table mem copy
loadi(59,3);
loadi(60,4);
//disk interrupt
loadi(6,19);
loadi(7,20);
//disk free list
loadi(61,2);
//int 8 fork
loadi(18,31);
loadi(19,32);
//int 11 synchronistion system call wait,signal,pid,ppid
loadi(24,37);
loadi(25,38);
//int 15 shutdown system call
loadi(32,45);
loadi(33,46);
//int 13
loadi(28,41);
loadi(29,42);
//int 14
loadi(30,43);
loadi(31,44);
//int 4
loadi(10,23);
loadi(11,24);
//root
loadi(62,5);
//init initialisation
PTBR=PAGE_TABLE_BASE+20;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
//init
[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+11] =80;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;
[PROCESS_TABLE+16+4]=CREATED;
[PROCESS_TABLE+16+3]=1;
[76*512] = [65*512+1];

//disk map table of init initialization
	alias j R1;
	j=2;
	while(j<10)do
		[DISK_MAP_TABLE+10+j]=-1;
		j=j+1;
	endwhile;
	[DISK_MAP_TABLE+10+4]=7;
	[DISK_MAP_TABLE+10+5]=8;	
//per process resource table of init process initialization
j = 1;
while (j < 9) do
    [([PROCESS_TABLE + 16 + 11] + 1) * 512 - 2 * j] = -1;
    j = j + 1;
endwhile;

alias i R0;
i=2;
while(i<16)do
	[PROCESS_TABLE+i*16+4]=TERMINATED;
	i=i+1;
endwhile;
[TERMINAL_STATUS_TABLE]=0;

i=0;
while(i<=82)do
	[MEMORY_FREE_LIST+i]=1;
	i=i+1;
endwhile;

while(i<=127)do
	[MEMORY_FREE_LIST+i]=0;
	i=i+1;
endwhile;
[SYSTEM_STATUS_TABLE+3]=0;
[SYSTEM_STATUS_TABLE+2]=45;	
[DISK_STATUS_TABLE]=0;
i=1;
while(i<=8) do
	[([PROCESS_TABLE + 16 + 11] + 1)*512 - 2*i] = -1;
	i = i + 1;
endwhile;
//semaphore table initialization
i=0;
while(i<32)do
	[SEMAPHORE_TABLE+i*4]=-1;
	[SEMAPHORE_TABLE+i*4+1]=0;
	i=i+1;
endwhile;
//file status table initialization
i=0;
while(i<MAX_FILE_NUM)do
	[FILE_STATUS_TABLE+i*4]=-1;
	[FILE_STATUS_TABLE+i*4+1]=-1;
	i=i+1;
endwhile;
i=0;
while(i<MAX_BUFFER)do
	[BUFFER_TABLE+i*4]=-1;
	[BUFFER_TABLE+i*4+2]=-1;
	[BUFFER_TABLE+i*4+1]=0;
	i=i+1;
endwhile;
			
return;
