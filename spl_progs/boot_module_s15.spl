loadi(16,29);
loadi(17,30);
loadi(50,63);
loadi(51,64);
loadi(4, 17);
loadi(5, 18);
loadi(65,7);
loadi(66,8);
loadi(22,35);
loadi(23,36);
loadi(2, 15);
loadi(3, 16);
loadi(63,13);
loadi(64,14);
loadi(83,69);
loadi(40,53);
loadi(41,54);
loadi(48,61);
loadi(49,62);

//init initialisation
PTBR=PAGE_TABLE_BASE+20;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";
//init
[PROCESS_TABLE+16+1]=1;
[PROCESS_TABLE+16+11] =80;
[PROCESS_TABLE+16+13]=8*512;
[PROCESS_TABLE+16+12]=0;
[PROCESS_TABLE+16+14]=PAGE_TABLE_BASE+20;
[PROCESS_TABLE+16+15]=10;
[PROCESS_TABLE+16+4]=CREATED;
[76*512] = [65*512+1];

//exec1 initialisation
PTBR=PAGE_TABLE_BASE+40;
//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "000";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";
//exec1
[PROCESS_TABLE+32+1]=2;
[PROCESS_TABLE+32+11] =88;
[PROCESS_TABLE+32+13]=8*512;
[PROCESS_TABLE+32+12]=0;
[PROCESS_TABLE+32+14]=PAGE_TABLE_BASE+40;
[PROCESS_TABLE+32+15]=10;
[PROCESS_TABLE+32+4]=CREATED;
[86*512] = [83*512+1];


alias i R0;
i=3;
while(i<16)do
	[PROCESS_TABLE+i*16+4]=TERMINATED;
	i=i+1;
endwhile;
[TERMINAL_STATUS_TABLE]=0;
return;
