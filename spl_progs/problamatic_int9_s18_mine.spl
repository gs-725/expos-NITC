alias usersp R0;
alias fname R1;
usersp=SP;
alias pid R2;
pid=[SYSTEM_STATUS_TABLE+1];
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 9;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11]*512-1;
fname=[[PTBR+2*((usersp-4)/512)]*512+(usersp-4)%512];
alias i R3;
i=0;//inodeindex
while(i<MAX_FILE_NUM)do
	if((fname==[INODE_TABLE+i*16+1])&&([INODE_TABLE+i*16]==3))then
		break;
	else
		i=i+1;
	endif;
endwhile;
print i;
if(i>=MAX_FILE_NUM)then
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
SP=usersp;
[[PTBR+2*((usersp-1)/512)]*512+(usersp-1)%512]=-1;
ireturn;
endif;
	
	multipush(R0,R1,R2,R3);
	R1=3;
	R2=pid;
	call MOD_1;
	multipop(R0,R1,R2,R3);
        [MEMORY_FREE_LIST+[PROCESS_TABLE+pid*16+11]]=[MEMORY_FREE_LIST+[PROCESS_TABLE+pid*16+11]]+1;
        [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;
        SP=[PROCESS_TABLE+pid*16+11]*512-1;
        
        [PROCESS_TABLE+pid*16+7]=i;
        [PROCESS_TABLE+pid*16+4]=RUNNING;
       	//PTBR=[PROCESS_TABLE+pid*16+14];
       	//Library
	[PTBR+0] = 63;
	[PTBR+1] = "0100";
	[PTBR+2] = 64;
	[PTBR+3] = "0100";
	
	//HEAP
	multipush(R0,R1,R2,R3);
	R1=1;
	call MOD_2;
	[PTBR+4] = R0;
	[PTBR+5] = "0110";
	R1=1;
	call MOD_2;
	[PTBR+6] = R0;
	[PTBR+7] = "0110";
	multipop(R0,R1,R2,R3);
	print "done";
	//code
	alias j R4;
	j=0;
	multipush(R0,R1,R2,R3,R4);
	while(j<4)do
		if([INODE_TABLE + i * 16 + 8 + j] != -1) then
			
			R1 = 1;
			call MOD_2;
			[PTBR + 8 + 2 * j] = R0;
			print R0;
			[PTBR + 9 + 2 * j] = "0100";
			//loadi(R0, [INODE_TABLE + i * 16 + 8 + j]);
			
			
		else
			[PTBR + 8 + 2 * j] = -1;
			[PTBR + 9 + 2 * j] = "0000";
			print "-1";
		endif;
		j = j + 1;
	endwhile;
	
	multipop(R0,R1,R2,R3,R4);
	j=0;
	while(j<4)do
		if([PTBR + 8 + 2 * j]!=-1)then
			multipush(R0,R1,R2,R3,R4);
			R1=2;
			R2=[SYSTEM_STATUS_TABLE + 1];
			R3=[PTBR + 8 + 2 * j];
			R4=[INODE_TABLE + i * 16 + 8 + j];//this argument is not going correctly
			call MOD_4;
			multipop(R0,R1,R2,R3,R4);
		endif;
		j=j+1;
	endwhile			
	print "loaded";		
	//stack
	multipush(R0,R1,R2,R3,R4);
	R1=1;
	call MOD_2;
	[PTBR+16] = R0;
	[PTBR+17] = "0110";
	
	R1=1;
	call MOD_2;
	[PTBR+18] = R0;
	[PTBR+19] = "0110";
	multipop(R0,R1,R2,R3,R4);
	print "stack alloted";
	print [PTBR+8];
	print "-1";
	print [PTBR+16];
	[[PTBR+16]*512]=[[PTBR+8]*512+1];
	print "entry";
	SP=8*512;
	[PROCESS_TABLE+pid*16+9]=0;
	print "ctransfer";
	i=1;
	while(i<9) do
		[([PROCESS_TABLE + pid*16 + 11] + 1) *512 + 2*i] = -1;
		i = i + 1;
	endwhile;
	print "resource";
	print [PROCESS_TABLE + pid*16 + 11];
	print [[PAGE_TABLE_BASE +20+8]*512+8]; //why is it printing 54

	ireturn;

	
