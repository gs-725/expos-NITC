alias functionnum R1;
alias PID R2;
if(functionnum==2)then
	
	alias upage R3;
	upage=[PROCESS_TABLE+PID*16+11];
	multipush(R1,R2,R3);
	R1=2;
	R2=[PROCESS_TABLE+PID*16+11];
	call MOD_2;
	multipop(R1,R2,R3);
	return;
else
	if(functionnum==3)then
		
		multipush(R1,R2);
		R1=4;
		R2=PID;
		call MOD_1;
		multipop(R1,R2);
		multipush(R1,R2);
		R1=2;
		R2=PID;
		call MOD_1;
		multipop(R1,R2);
		[PROCESS_TABLE+PID*16+4]=TERMINATED;
		return;
	else
		if(functionnum==4)then
			//LIBRARY
			[PTBR+0]=-1;
			[PTBR+1]="0000";
			[PTBR+2]=-1;
			[PTBR+3]="0000";
			alias J R4;
			J=4;
			while(J<20)do
				if(([PTBR+J]!=-1)&&(([PTBR+J+1]=="0100")||([PTBR+J+1]=="0110")||([PTBR+J+1]=="0111")||			([PTBR+J+1]=="1100")||([PTBR+J+1]=="1110")||([PTBR+J+1]=="1111")))then
					multipush(R1,R2,R4);
					R1=2;
					R2=[PTBR+J];
					call MOD_2;
					multipop(R1,R2,R4);
					
				endif;
				[PTBR+J]=-1;
				[PTBR+J+1]="0000";
				J=J+2;
			endwhile;
			J=2;
			while(J<4)do
				if([DISK_MAP_TABLE+PID*10+J]!=-1)then
					multipush(R1,R2,R4);
					R1=4;
					R2=[DISK_MAP_TABLE+PID*10+J];
					R3=PID;
					call MOD_2;
					multipop(R1,R2,R4);
				endif;
				if([DISK_MAP_TABLE+PID*10+J+6]!=-1)then
					multipush(R1,R2,R4);
					R1=4;
					R2=[DISK_MAP_TABLE+PID*10+J+6];
					R3=PID;
					call MOD_2;
					multipop(R1,R2,R4);
				endif;
				J=J+1;
			endwhile;		
					
			
			return;
		 endif;
	 endif;
endif;
