//SP=SP+1;
//[SP]=BP;
inline "PUSH BP";
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+14]=PTBR;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+15]=PTLR;
[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+12]=SP%512;
alias i R0;
i=[SYSTEM_STATUS_TABLE+1]+1;

while(i<16)do

	if([PROCESS_TABLE+i*16+4]==CREATED)then
		SP=[PROCESS_TABLE+i*16+11]*512;
		inline "POP BP";
		SP=[PROCESS_TABLE+i*16+13];
		[PROCESS_TABLE+i*16+4]=RUNNING;
		[PROCESS_TABLE+i*16+9]=0;
		[SYSTEM_STATUS_TABLE+1]=i;
		PTBR=[PROCESS_TABLE+i*16+14];
		PTLR=[PROCESS_TABLE+i*16+15];
		ireturn;

	else
		if([PROCESS_TABLE+i*16+4]==READY)then
			SP=([PROCESS_TABLE+i*16+11]*512)+[PROCESS_TABLE+i*16+12];
			[SYSTEM_STATUS_TABLE+1]=i;
			PTBR=[PROCESS_TABLE+i*16+14];
			PTLR=[PROCESS_TABLE+i*16+15];
			[PROCESS_TABLE+i*16+4]=RUNNING;
			//BP=[SP];
			//SP=SP-1;
			inline "POP BP";
			return;
		else
			i=i+1;
		endif;
	endif;
endwhile;
[SYSTEM_STATUS_TABLE+1]=0;
SP=([PROCESS_TABLE+11]*512)+[PROCESS_TABLE+12];
PTBR=[PROCESS_TABLE+14];
PTLR=[PROCESS_TABLE+15];
[PROCESS_TABLE+4]=RUNNING;
//BP=[SP];
//SP=SP-1;
inline "POP BP";
return;
		
